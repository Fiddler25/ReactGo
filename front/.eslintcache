[{"/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/index.js":"1","/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/reportWebVitals.js":"2","/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/App.js":"3","/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/LoginPage.js":"4","/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/HomePage.js":"5"},{"size":500,"mtime":1610875642678,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610875642685,"results":"8","hashOfConfig":"7"},{"size":1584,"mtime":1613080768418,"results":"9","hashOfConfig":"7"},{"size":1303,"mtime":1611783912535,"results":"10","hashOfConfig":"7"},{"size":287,"mtime":1610880203900,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"dleazt",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/index.js",[],["24","25"],"/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/reportWebVitals.js",[],"/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/App.js",[],"/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/LoginPage.js",["26"],"import React, { Component } from \"react\";\n\nexport default class LoginPage extends Component {\n  handleChangeText = (event) => {\n    this.props.onChangeText(event.target.value);\n  };\n\n  handleChangePassword = (event) => {\n    this.props.onChangePassword(event.target.value);\n  };\n\n  onLogin = () => {\n    const { userId, password } = this.props;\n    this.props.onLogin(userId, password);\n  };\n\n  render() {\n    const { userId, password } = this.props;\n    return (\n      <div align=\"center\">\n        <table border=\"0\">\n          <tbody>\n            <tr>\n              <th>ユーザID</th>\n              <td>\n                <input\n                  type=\"text\"\n                  label=\"User ID\"\n                  maxLength=\"10\"\n                  value={userId}\n                  onChange={this.handleChangeText}\n                />\n              </td>\n            </tr>\n            <tr>\n              <th>パスワード</th>\n              <td>\n                <input\n                  type=\"password\"\n                  label=\"password\"\n                  maxLength=\"10\"\n                  onChange={this.handleChangePassword}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <button onClick={this.onLogin}>ログイン</button>\n      </div>\n    );\n  }\n}\n","/Users/kanayamaatsushi/workspace/App/ReactGo/front/src/HomePage.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":18,"column":21,"nodeType":"33","messageId":"34","endLine":18,"endColumn":29},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]